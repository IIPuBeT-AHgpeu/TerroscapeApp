@using TerroscapeApp.Service
@model TerroscapeApp.Database.Round

@{
    ViewData["Title"] = "Details";
}

<h1>Подробная информация о раунде</h1>

<div>
    <h4>Раунд @Model.Id</h4>
    <hr />
    <dl class="row">
        <dt class="col-sm-2" style="padding-top: 10px">
            Общая информация:
        </dt>
        <dd class="col-sm-10" style="padding-top: 10px" />

        <dt class="col-sm-2" style="padding-top: 20px">
            Дата проведения партии
        </dt>
        <dd class="col-sm-10" style="padding-top: 20px">
            @Html.DisplayFor(model => model.Date)
        </dd>
        <dt class="col-sm-2">
           Карта
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Map.Name)
        </dd>

        <dt class="col-sm-2" style="padding-top: 50px">
            Информация об убийце:
        </dt>
        <dd class="col-sm-10" style="padding-top: 50px" />

        <dt class="col-sm-2" style="padding-top: 20px">
            Игрок за убийцу
        </dt>
        <dd class="col-sm-10" style="padding-top: 20px">
            @Html.DisplayFor(model => model.KillerPlayer.Name)
        </dd>
        <dt class="col-sm-2">
            Персонаж убийцы
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Killer.Name)
        </dd>
        <dt class="col-sm-2">
            Уровень убийцы
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.KillerLevel)
        </dd>
        <dt class="col-sm-2">
            Количество доп. навыков убийцы
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.KillerBoostNum)
        </dd>

        <dt class="col-sm-2" style="padding-top: 50px">
            Информация о выживших:
        </dt>
        <dd class="col-sm-10" style="padding-top: 50px" />

        <dt class="col-sm-2" style="padding-top: 20px">
            Игрок 1
        </dt>
        <dd class="col-sm-10" style="padding-top: 20px">
            @Html.DisplayFor(model => model.FirstPlayer.Name)
        </dd>
        <dt class="col-sm-2">
            Жертва
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.FirstAvatar.Name)
        </dd>
        <dt class="col-sm-2">
            Состояние на конец партии
        </dt>
        <dd class="col-sm-10">
            @{
                var s1 = EnumsTranslation.SurvivorStateTranslation.GetValueOrDefault(Model.FirstState);
                if (s1 != null)
                    @Html.Raw(s1)
                else
                    @Html.Raw("Неизвестное значение")
            }
        </dd>
        <dt class="col-sm-2" style="padding-top: 20px">
            Игрок 2
        </dt>
        <dd class="col-sm-10" style="padding-top: 20px">
            @{
                if (Model.SecondPlayer == null) @Html.Raw("Нет игрока")
                else @Html.DisplayFor(model => model.SecondPlayer!.Name)
            }
        </dd>
        <dt class="col-sm-2">
            Жертва
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.SecondAvatar.Name)
        </dd>
        <dt class="col-sm-2">
            Состояние на конец партии
        </dt>
        <dd class="col-sm-10">
            @{
                var s2 = EnumsTranslation.SurvivorStateTranslation.GetValueOrDefault(Model.SecondState);
                if (s2 != null)
                    @Html.Raw(s2)
                else
                    @Html.Raw("Неизвестное значение")
            }
        </dd>




        
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.KillerWin)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.KillerWin)
        </dd>     
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.SurvivorBoostNum)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.SurvivorBoostNum)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.HasPlans)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.HasPlans)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.GotKeys)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.GotKeys)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.DoneRadio)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.DoneRadio)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.DonePlan)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.DonePlan)
        </dd>               
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.ThirdState)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.ThirdState)
        </dd>                                    
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.ThirdPlayer)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.ThirdPlayer.Id)
        </dd>                
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.ThirdAvatar)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.ThirdAvatar.Id)
        </dd>
    </dl>
</div>
<div>
    <a asp-action="Edit" asp-route-id="@Model?.Id">Edit</a> |
    <a asp-action="Index">Back to List</a>
</div>
